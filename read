练习git添加文件
git status
git add 文件，添加文件到暂存区，git add --a提交说有的文件
git commit  -m 注释 注释加双引号“”

git status 查看当前文件状态，是否有更改
git diff 对比当前和更改的地方，
git log 查看打印的提交记录
输入q退出记录能继续敲代码
git log --pretty=oneline 将记录在一行显示，显示提交的SHA1的算法的版本号和提交注释

HEAD表示的是当前的版本，HEAD^表示上一个版本，HEAD^^表示上2次HEAD~100表示上100次
git reset退回版本
git reset --hard HEAD^  表示退回上一个版本
git reset --hard sad321543(版本的id )  退回到指定的版本，如果上面退回操作错了，还可以退回到使用git reset会退到的被删除的版本，（操作错了，可以退回去到新的版本）
因为git reset只是把指针变了，把工作区内容更新到当前的版本，所以非常快

git reflog 当后悔的时候可以使用，git reflog当后悔的时候可以用这个查看所有的记录，被回退的也能看到，可以获得id来后悔

第一次修改 -> git add -> 第二次修改 -> git commit
你看，我们前面讲了，Git管理的是修改，当你用git add命令后，在工作区的第一次修改被放入暂存区，准备提交，但是，在工作区的第二次修改并没有放入暂存区，
所以，git commit只负责把暂存区的修改提交了，也就是第一次的修改被提交了，第二次的修改不会被提交
git diff HEAD -- readme.txt命令可以查看工作区和版本库里面最新版本的区别

命令git checkout -- readme.txt（注意-- 文件中间有空格）意思就是，把readme.txt文件在工作区的修改全部撤销，这里有两种情况：
git checkout -- file命令中的--很重要，没有--，就变成了“切换到另一个分支”的命令

Git同样告诉我们，用命令git reset HEAD file可以把暂存区的修改撤销掉（unstage），重新放回工作区：
git reset命令既可以回退版本，也可以把暂存区的修改回退到工作区。当我们用HEAD时，表示最新的版本。

还记得如何丢弃工作区的修改吗？$ git checkout -- readme.txt

又到了小结时间。
场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。
场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，
分两步，第一步用命令git reset HEAD file，就回到了场景1，第二步按场景1操作。
场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。